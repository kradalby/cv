eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGQ6CiAgICAgIGltYWdlOiBub2RlOmxhdGVzdAogICAgICBwdWxsOiB0cnVlCiAgICAgIGNvbW1hbmRzOgogICAgICAgIC0gYXB0LWdldCB1cGRhdGUKICAgICAgICAtIGFwdC1nZXQgaW5zdGFsbCB3a2h0bWx0b3BkZiBwZXJsIC15IC0tZm9yY2UteWVzCiAgICAgICAgLSBucG0gaW5zdGFsbCBmbHVlbnRjdiAtZwogICAgICAgIC0gbnBtIGluc3RhbGwganNvbnJlc3VtZS10aGVtZS1zbGljawogICAgICAgIC0gZmx1ZW50Y3YgQlVJTEQgcmVzdW1lLmpzb24gVE8gb3V0L2N2LmFsbCAtdCBub2RlX21vZHVsZXMvanNvbnJlc3VtZS10aGVtZS1zbGljawogICAgICAgICAgIyBUaGlzIGlzIGEgaGFjay4uLgogICAgICAgIC0gcGVybCAtcGkgLUUgJ3MvbGluayBocmVmPSJodHRwL2xpbmsgaHJlZj0iaHR0cHMvZycgb3V0L2N2Lmh0bWwKICAgICAgICAtIHBlcmwgLXBpIC1FICJzL2xpbmsgaHJlZj0naHR0cC9saW5rIGhyZWY9J2h0dHBzL2ciIG91dC9jdi5odG1sCiAgICAgICAgLSBlY2hvICJEZXBsb3lpbmciCgogIGRlcGxveToKICAgIHJzeW5jOgogICAgICBpbWFnZTogZHJpbGxzdGVyL2Ryb25lLXJzeW5jCiAgICAgIHVzZXI6IHd3dwogICAgICBob3N0OiBzZWVsLnRlcnJhLmZhcC5ubwogICAgICBwb3J0OiAyMgogICAgICBzb3VyY2U6IG91dC8KICAgICAgdGFyZ2V0OiAvdXNyL2xvY2FsL3d3dy9jdi5rcmFkYWxieS5uby8KICAgICAgZGVsZXRlOiBmYWxzZQogICAgICByZWN1cnNpdmU6IHRydWUKICAgICAgZXhjbHVkZToKICAgICAgd2hlbjoKICAgICAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIHNjcmlwdDoKICAgICAgICAtIG12IC91c3IvbG9jYWwvd3d3L2N2LmtyYWRhbGJ5Lm5vL2N2Lmh0bWwgL3Vzci9sb2NhbC93d3cvY3Yua3JhZGFsYnkubm8vaW5kZXguaHRtbAogICAgICAgIC0gZWNobyAiRG9uZSIKCiAgbm90aWZ5OgogICAgaW1hZ2U6IGRyaWxsc3Rlci9kcm9uZS1lbWFpbAogICAgaG9zdDogbWFpbC5udG51LmZhcC5ubwogICAgcG9ydDogMjUKICAgIGZyb206IGRyb25lQGRyb25lLmZhcC5ubwogICAgcmVjaXBpZW50czogWyBrcmFkYWxieUBrcmFkYWxieS5ubyBdCiAgICB3aGVuOgogICAgICBzdGF0dXM6IFsgc3VjY2VzcywgY2hhbmdlZCwgZmFpbHVyZSBdCg.gLHWWUUfpxeoRI5-ku1L4KO3VFqYfrHC83dZvVROGEM